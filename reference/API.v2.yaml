openapi: 3.0.0
info:
  title: API v1
  version: '2.0'
  description: ''
servers:
  - url: 'https://api.becauseofprog.fr/v2'
paths:
  /users:
    get:
      summary: Get users
      tags:
        - Users
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  code:
                    type: integer
                    default: 1
                  data:
                    type: array
                    items:
                      $ref: ../models/user.v1.yaml
                required:
                  - code
                  - data
      operationId: get-users
      description: Get all the users. Requires auth and `USER_WRITE` permission.
      parameters:
        - schema:
            type: string
          in: header
          name: Authorization
    post:
      summary: Create user
      tags:
        - Users
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  code:
                    type: integer
                    default: 1
                  data:
                    $ref: ../models/user.v1.yaml
                required:
                  - code
                  - data
      operationId: create-user
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                email:
                  type: string
                  description: "user's email adress"
                  pattern: "(?:[a-z0-9!#$%&'*+/=?^_`{|}~-]+(?:\\.[a-z0-9!#$%&'*+/=?^_`{|}~-]+)*|\"(?:[\\x01-\\x08\\x0b\\x0c\\x0e-\\x1f\\x21\\x23-\\x5b\\x5d-\\x7f]|\\\\[\\x01-\\x09\\x0b\\x0c\\x0e-\\x7f])*\")@(?:(?:[a-z0-9](?:[a-z0-9-]*[a-z0-9])?\\.)+[a-z0-9](?:[a-z0-9-]*[a-z0-9])?|\\[(?:(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)\\.){3}(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?|[a-z0-9-]*[a-z0-9]:(?:[\\x01-\\x08\\x0b\\x0c\\x0e-\\x1f\\x21-\\x5a\\x53-\\x7f]|\\\\[\\x01-\\x09\\x0b\\x0c\\x0e-\\x7f])+)\\])"
                username:
                  type: string
                  description: 'username, will be taken in the profile URL'
                  minLength: 2
                  maxLength: 32
                password:
                  type: string
                  description: "user's password (be careful to choose strong enough one)"
              required:
                - email
                - username
                - password
      description: |-
        **This endpoint isn't available for the moment. We're considering changing our users system.**

        Create a new user. Will be asked to verify their email address.
  '/users/{username}':
    parameters:
      - schema:
          type: string
        name: username
        in: path
        required: true
    get:
      summary: Get user
      tags:
        - Users
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  code:
                    type: integer
                    default: 1
                  data:
                    $ref: ../models/user.v1.yaml
                required:
                  - code
                  - data
      operationId: get-user
      description: "Get user's informations based on their username."
    patch:
      summary: "Edit user's profile"
      operationId: edit-user
      responses:
        '204':
          description: No Content
          content:
            application/json:
              schema:
                type: object
                properties:
                  code:
                    type: integer
                    default: 1
                required:
                  - code
      description: "Edit the user's profile informations. Requires auth, and user has to be itself."
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                displayname:
                  type: string
                  minLength: 2
                  maxLength: 32
                picture:
                  type: string
                description:
                  type: string
                biography:
                  type: string
                locations:
                  type: string
                socials:
                  type: array
                  items:
                    $ref: ../models/social.v1.yaml
      parameters:
        - schema:
            type: string
          in: header
          name: Authorization
  '/users/{username}/permissions':
    parameters:
      - schema:
          type: string
        name: username
        in: path
        required: true
    get:
      summary: "Get user's permissions"
      tags:
        - Users
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  code:
                    type: integer
                    default: 1
                  data:
                    type: array
                    items:
                      type: string
                required:
                  - code
                  - data
      operationId: get-user-permissions
      description: Get the permissions a user has. Requires auth and `USER_WRITE` permission.
      requestBody: {}
      parameters:
        - schema:
            type: string
          in: header
          name: Authorization
    patch:
      summary: "Edit user's permissions"
      operationId: edit-user-permissions
      responses:
        '204':
          description: No Content
          content:
            application/json:
              schema:
                type: object
                properties:
                  code:
                    type: integer
                    default: 1
                required:
                  - code
      description: 'Edit permissions a user has, to grant or limit access to resources. Requires auth and `USER_WRITE` permission.'
      parameters:
        - schema:
            type: string
          in: header
          name: Authorization
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                permissions:
                  type: array
                  items:
                    type: string
              required:
                - permissions
  /blog-posts:
    get:
      summary: Get all posts
      tags: []
      responses: {}
      operationId: get-posts
      description: |-
        Get all the posts. Returns a list of blog post objects without the content.

        This endpoint uses pagination.
      parameters:
        - schema:
            type: string
          in: query
          name: category
          description: "post's category"
        - schema:
            type: string
          in: query
          name: type
          description: "post's type (article / tutorial / flash)"
        - schema:
            type: string
          in: query
          name: search
          description: search for articles (text inside title or description)
    parameters: []
    post:
      summary: Create post
      operationId: post-blog-posts
      responses:
        '200':
          description: OK
      description: Write a new post and publish it. Requires auth and `BLOG_WRITE` permission.
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                title:
                  type: string
                type:
                  type: string
                category:
                  type: string
                description:
                  type: string
                labels:
                  type: array
                  items:
                    type: string
                banner:
                  type: string
                content:
                  type: string
                locale:
                  type: string
                  default: fr
              required:
                - title
                - type
                - category
                - description
                - labels
                - banner
                - content
components:
  schemas: {}
  securitySchemes: {}
